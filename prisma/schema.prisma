generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  number    String
  password  String
  imageUrl  String
  roles     Roles
  fav       Favorite?
  products  Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Favorite {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  products  Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  description String
  price     Float
  imageUrl  String
  address   Address?
  filters   Filters[]
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  favorite  Favorite[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Address {
  id        Int      @id @default(autoincrement())
  city      String
  streetName String
  latitude  Float
  longitude Float
  product   Product?  @relation(fields: [productId], references: [id])
  productId Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Filters {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  products  Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Roles {
  USER
  ADMIN
}
